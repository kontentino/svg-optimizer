name: Default

on:
  push:
    branches:
      - master
  release:
    types: 
      - published

env:
  PROJECT_NAME: svg-optimizer
  ORGANIZATION: kontentino

jobs:
  push_latest:
    name: Push container with latest version
    if: github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: docker build -t $ORGANIZATION/$PROJECT_NAME .
    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
    - name: Push image to Digital Ocean Container Registry
      run: |
        VERSION=latest
        
        docker tag $ORGANIZATION/$PROJECT_NAME registry.digitalocean.com/$ORGANIZATION/$PROJECT_NAME:$VERSION
        
        doctl auth init
        doctl registry login
        
        docker push registry.digitalocean.com/$ORGANIZATION/$PROJECT_NAME:$VERSION
  deploy_dev:
    needs: push_latest
    name: Deploy to dev
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
    - uses: actions/checkout@v2
    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
    - name: Obtain kubernetes config
      run: doctl kubernetes cluster kubeconfig save e3cae6b2-d53b-4231-a37f-d8f1f7dae057
    - name: Deploy new version
      run: |
        kubectl rollout restart deployment/svg-optimizer-deployment --namespace="tools"
  push_version:
    name: Push container with release version
    if: github.event_name == 'release'
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: docker build -t $ORGANIZATION/$PROJECT_NAME .
    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
    - name: Push image to Digital Ocean Container Registry
      run: |
        VERSION=${GITHUB_REF#"refs/tags/"}
        
        docker tag $ORGANIZATION/$PROJECT_NAME registry.digitalocean.com/$ORGANIZATION/$PROJECT_NAME:$VERSION
        
        doctl auth init
        doctl registry login
        
        docker push $IMAGE_NAME:$VERSION
  deploy_prod:
    needs: push_version
    name: Deploy to prod
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    steps:
    - uses: actions/checkout@v2
    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
    - name: Obtain kubernetes config
      run: doctl kubernetes cluster kubeconfig save c8d1d515-990e-45d1-8f9e-856b4fc2ae1d
    - name: Deploy new version
      run: |
        VERSION=${GITHUB_REF#"refs/tags/"}
        
        kubectl set image deployment/svg-optimizer-deployment svg-optimizer-application=registry.digitalocean.com/$ORGANIZATION/$PROJECT_NAME:$VERSION
